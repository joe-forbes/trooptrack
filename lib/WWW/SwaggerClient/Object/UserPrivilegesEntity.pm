package WWW::SwaggerClient::Object::UserPrivilegesEntity;

require 5.6.0;
use strict;
use warnings;
use utf8;
use JSON qw(decode_json);
use Data::Dumper;
use Module::Runtime qw(use_module);
use Log::Any qw($log);
use Date::Parse;
use DateTime;

use base "WWW::SwaggerClient::Object::BaseObject";

#
#
#
#NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
#

my $swagger_types = {
    'privileges' => 'ARRAY[string]',
    'troop_type' => 'string',
    'troop' => 'string',
    'troop_type_id' => 'int',
    'cache_scope' => 'string',
    'troop_number' => 'string',
    'troop_id' => 'int',
    'user_id' => 'int',
    'token' => 'string'
};

my $attribute_map = {
    'privileges' => 'privileges',
    'troop_type' => 'troop_type',
    'troop' => 'troop',
    'troop_type_id' => 'troop_type_id',
    'cache_scope' => 'cache_scope',
    'troop_number' => 'troop_number',
    'troop_id' => 'troop_id',
    'user_id' => 'user_id',
    'token' => 'token'
};

# new object
sub new { 
    my ($class, %args) = @_; 
    my $self = { 
        #Names of privileges this user has.
        'privileges' => $args{'privileges'}, 
        #Description of the type of unit this user belongs to.
        'troop_type' => $args{'troop_type'}, 
        #Full number or name identifying the unit this user belongs to.
        'troop' => $args{'troop'}, 
        #ID of the unit type record
        'troop_type_id' => $args{'troop_type_id'}, 
        #This value is used to identify the contents of the offline cache that apply to this user.
        'cache_scope' => $args{'cache_scope'}, 
        #Number of the unit this user belongs to.
        'troop_number' => $args{'troop_number'}, 
        #ID of the unit this user belongs to
        'troop_id' => $args{'troop_id'}, 
        #ID of the user record
        'user_id' => $args{'user_id'}, 
        #API authentication token for this user
        'token' => $args{'token'}
    }; 

    return bless $self, $class; 
}  

# get swagger type of the attribute
sub get_swagger_types {
    return $swagger_types;
}

# get attribute mappping
sub get_attribute_map {
    return $attribute_map;
}

1;
